# License: GPL 
# Author: Steven Shiau <steven _at_ clonezilla org>
# Description:
# Grub2 config file to find the EFI boot loader in 1st hard drive, then boot
# Ref: git repository, docs/{osdetect.cfg,autoiso.cfg}
#      https://lists.gnu.org/archive/html/grub-devel/2013-11/msg00259.html
# Possible EFI boot loader file:
# /EFI/redhat/grub.efi 
# /EFI/fedora/shim.efi 
# /EFI/fedora/grubx64.efi 
# /EFI/centos/grubx64.efi 
# /EFI/debian/grubx64.efi 
# /EFI/ubuntu/grubx64.efi 
# /EFI/mageia/grubx64.efi 
# /EFI/opensuse/grubx64.efi 
# /EFI/sled12/grubx64.efi 
# /EFI/SuSE/elilo.efi 
# /EFI/Boot/bootx64.efi 
# /EFI/Microsoft/Boot/bootmgfw.efi 
# /EFI/centos/grubaa64.efi 
# /EFI/debian/grubaa64.efi 
# /EFI/ubuntu/grubaa64.efi 
# /EFI/fedora/grubaa64.efi 
# /EFI/redhat/grubaa64.efi 
# /EFI/opensuse/grubaa64.efi 
# /EFI/Boot/bootaa64.efi 

#efidirs="redhat fedora centos debian ubuntu mageia opensuse sled12 SuSE Boot boot Microsoft/Boot"
efiblfiles="shim.efi grubx64.efi grub.efi elilo.efi bootx64.efi Boot/bootmgfw.efi grubaa64.efi bootaa64.efi"

insmod regexp
for dev in (*); do
    # Reset device and fstype otherwise regexp might not update it.
    device=""
    fstype=""
    dirs_list=""
    # $device: parenthesis removed from $dev
    regexp -s device '\((hd0,.*)\)' $dev
    if [ -z "$device" ]; then
       # Not hd0, continue searching the next one
       continue
    fi
    # $fstype: filesystem type identified
    probe -s fstype -f $device
    if test $fstype = "fat"; then
      # Found possible EFI partition since it definitely has to be FAT.
      # Search /EFI/*/*.efi
      obreak="no"
      efi_boot="no"
      set root=$device
      efi_boot_append=""
      for idir in /EFI/*; do
        # We only need dir in 2nd level of path
        if [ ! -d "$idir" ]; then
          continue
        fi
        if [ "$idir" = "/EFI/boot" -o "$idir" = "/EFI/Boot" ]; then
          # Should not add /EFI/{boot,Boot} now, make it as the last one later.
          efi_boot="yes"
          efi_boot_append="$idir"
          continue
        fi
        dirs_list="$dirs_list $idir"
      done
      if [ "$efi_boot" = "yes" ]; then
        dirs_list="$dirs_list $efi_boot_append"
      fi
      for dir in $dirs_list; do
	for file in $efiblfiles; do
	    if test -f $dir/$file; then
              echo "Found EFI boot loader: $dir/$file"
              set timeout=10
	      menuentry "$dir (on $device)" $device "$dir/$file" {
	        set root=$2
                set efibl=$3
                chainloader $efibl
                boot
	      }
              obreak="yes"
              break
            fi
        done
        if [ "$obreak" = "yes" ]; then
          break
        fi
      done
    fi
done
